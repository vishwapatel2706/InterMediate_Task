css-next-level-guide.html
html
<!DOCTYPE html>
<html lang="hi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSS Next Level Guide - Intermediate Tasks</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        :root {
            --primary-color: #6366f1;
            --secondary-color: #8b5cf6;
            --accent-color: #ec4899;
            --dark-bg: #1f2937;
            --light-bg: #f9fafb;
            --text-dark: #111827;
            --text-light: #f3f4f6;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            background: linear-gradient(135deg, var(--light-bg) 0%, #e5e7eb 100%);
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        /* Header Styles */
        header {
            background: var(--dark-bg);
            color: var(--text-light);
            padding: 2rem 0;
            position: relative;
            overflow: hidden;
        }

        .header-content {
            text-align: center;
            position: relative;
            z-index: 2;
        }

        .header-bg {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
            opacity: 0.9;
            z-index: 1;
        }

        /* CSS Grid Layout */
        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            margin: 3rem 0;
        }

        .feature-card {
            background: white;
            padding: 2rem;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            border: 1px solid #e5e7eb;
        }

        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        }

        /* Flexbox Examples */
        .flex-container {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            margin: 2rem 0;
        }

        .flex-item {
            flex: 1;
            min-width: 200px;
            padding: 1rem;
            background: var(--primary-color);
            color: white;
            border-radius: 8px;
            text-align: center;
            transition: all 0.3s ease;
        }

        .flex-item:hover {
            background: var(--secondary-color);
            transform: scale(1.05);
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .animated-element {
            animation: fadeInUp 1s ease-out;
        }

        @keyframes pulse {
            0%, 100% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.05);
            }
        }

        .pulse {
            animation: pulse 2s infinite;
        }

        /* Advanced CSS Features */
        .gradient-text {
            background: linear-gradient(45deg, var(--primary-color), var(--accent-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .custom-shape {
            width: 100px;
            height: 100px;
            background: var(--primary-color);
            clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
            margin: 0 auto;
        }

        /* Responsive Design */
        .responsive-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1rem;
        }

        .responsive-item {
            background: white;
            padding: 1.5rem;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        /* Dark Mode Support */
        @media (prefers-color-scheme: dark) {
            body {
                background: var(--dark-bg);
                color: var(--text-light);
            }
            
            .feature-card,
            .responsive-item {
                background: #374151;
                color: var(--text-light);
            }
        }

        /* Hover Effects */
        .hover-effect {
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .hover-effect:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
        }

        /* Code Examples */
        .code-block {
            background: #1f2937;
            color: #e5e7eb;
            padding: 1.5rem;
            border-radius: 8px;
            overflow-x: auto;
            margin: 1rem 0;
            font-family: 'Courier New', monospace;
        }

        /* Interactive Elements */
        .interactive-demo {
            padding: 2rem;
            background: white;
            border-radius: 12px;
            margin: 2rem 0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .slider-container {
            margin: 1rem 0;
        }

        input[type="range"] {
            width: 100%;
            margin: 1rem 0;
        }
    </style>
</head>
<body>
    <header>
        <div class="header-bg"></div>
        <div class="container header-content">
            <h1 class="text-4xl md:text-6xl font-bold mb-4 animated-element">CSS Next Level Guide</h1>
            <p class="text-xl mb-8 animated-element" style="animation-delay: 0.2s;">Intermediate to Advanced CSS Techniques</p>
            <div class="pulse" style="animation-delay: 0.4s;">
                <div class="custom-shape"></div>
            </div>
        </div>
    </header>

    <main class="container">
        <!-- CSS Grid Section -->
        <section class="my-12">
            <h2 class="text-3xl font-bold mb-6 gradient-text">1. CSS Grid Layout</h2>
            <p class="text-lg mb-4">Modern layout system for creating two-dimensional layouts.</p>
            
            <div class="features-grid">
                <div class="feature-card hover-effect">
                    <h3 class="text-xl font-semibold mb-3">Grid Template Areas</h3>
                    <p>Define named grid areas for intuitive layout creation.</p>
                    <div class="code-block">
                        .grid-container {<br>
                        &nbsp;&nbsp;display: grid;<br>
                        &nbsp;&nbsp;grid-template-areas: <br>
                        &nbsp;&nbsp;&nbsp;&nbsp;"header header"<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;"sidebar main"<br>
                        &nbsp;&nbsp;&nbsp;&nbsp;"footer footer";<br>
                        }
                    </div>
                </div>

                <div class="feature-card hover-effect">
                    <h3 class="text-xl font-semibold mb-3">Auto Placement</h3>
                    <p>Let the browser automatically place items in the grid.</p>
                    <div class="code-block">
                        .grid {<br>
                        &nbsp;&nbsp;display: grid;<br>
                        &nbsp;&nbsp;grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));<br>
                        &nbsp;&nbsp;gap: 1rem;<br>
                        }
                    </div>
                </div>

                <div class="feature-card hover-effect">
                    <h3 class="text-xl font-semibold mb-3">Grid Alignment</h3>
                    <p>Advanced alignment controls for precise positioning.</p>
                    <div class="code-block">
                        .item {<br>
                        &nbsp;&nbsp;justify-self: center;<br>
                        &nbsp;&nbsp;align-self: end;<br>
                        &nbsp;&nbsp;place-self: center end;<br>
                        }
                    </div>
                </div>
            </div>
        </section>

        <!-- Flexbox Section -->
        <section class="my-12">
            <h2 class="text-3xl font-bold mb-6 gradient-text">2. Advanced Flexbox</h2>
            <p class="text-lg mb-4">Powerful one-dimensional layout system for components.</p>
            
            <div class="flex-container">
                <div class="flex-item">Flex Item 1</div>
                <div class="flex-item">Flex Item 2</div>
                <div class="flex-item">Flex Item 3</div>
                <div class="flex-item">Flex Item 4</div>
            </div>

            <div class="code-block">
                .flex-container {<br>
                &nbsp;&nbsp;display: flex;<br>
                &nbsp;&nbsp;flex-wrap: wrap;<br>
                &nbsp;&nbsp;gap: 1rem;<br>
                &nbsp;&nbsp;justify-content: space-between;<br>
                &nbsp;&nbsp;align-items: center;<br>
                }
            </div>
        </section>

        <!-- Animations Section -->
        <section class="my-12">
            <h2 class="text-3xl font-bold mb-6 gradient-text">3. CSS Animations & Transitions</h2>
            <p class="text-lg mb-4">Create smooth animations and transitions for better UX.</p>
            
            <div class="interactive-demo">
                <h3 class="text-xl font-semibold mb-4">Transition Demo</h3>
                <div class="slider-container">
                    <label for="transition-slider">Transition Duration: <span id="duration-value">0.3s</span></label>
                    <input type="range" id="transition-slider" min="0.1" max="2" step="0.1" value="0.3">
                </div>
                
                <div id="transition-demo" style="width: 100px; height: 100px; background: var(--primary-color); border-radius: 8px; margin: 1rem auto; transition: all 0.3s ease; cursor: pointer;"></div>
                <p class="text-center">Hover over the box to see the transition</p>
            </div>
        </section>

        <!-- Modern Features Section -->
        <section class="my-12">
            <h2 class="text-3xl font-bold mb-6 gradient-text">4. Modern CSS Features</h2>
            
            <div class="responsive-grid">
                <div class="responsive-item">
                    <h3 class="text-xl font-semibold mb-3">CSS Variables</h3>
                    <p>Dynamic values that can be reused throughout your stylesheet.</p>
                </div>

                <div class="responsive-item">
                    <h3 class="text-xl font-semibold mb-3">Clip Path</h3>
                    <p>Create complex shapes and masks with CSS.</p>
                </div>

                <div class="responsive-item">
                    <h3 class="text-xl font-semibold mb-3">Backdrop Filter</h3>
                    <p>Apply filter effects to the area behind an element.</p>
                </div>

                <div class="responsive-item">
                    <h3 class="text-xl font-semibold mb-3">Scroll Snap</h3>
                    <p>Control scroll behavior for better mobile experiences.</p>
                </div>
            </div>
        </section>

        <!-- Responsive Design Section -->
        <section class="my-12">
            <h2 class="text-3xl font-bold mb-6 gradient-text">5. Responsive Design Patterns</h2>
            
            <div class="code-block">
                /* Mobile First Approach */<br>
                .container {<br>
                &nbsp;&nbsp;padding: 1rem;<br>
                }<br><br>
                
                /* Tablet */<br>
                @media (min-width: 768px) {<br>
                &nbsp;&nbsp;.container {<br>
                &nbsp;&nbsp;&nbsp;&nbsp;padding: 2rem;<br>
                &nbsp;&nbsp;}<br>
                }<br><br>
                
                /* Desktop */<br>
                @media (min-width: 1024px) {<br>
                &nbsp;&nbsp;.container {<br>
                &nbsp;&nbsp;&nbsp;&nbsp;max-width: 1200px;<br>
                &nbsp;&nbsp;&nbsp;&nbsp;margin: 0 auto;<br>
                &nbsp;&nbsp;}<br>
                }
            </div>
        </section>
    </main>

    <footer class="bg-gray-800 text-white py-8 mt-12">
        <div class="container text-center">
            <p>&copy; 2024 CSS Next Level Guide. Intermediate GitHub Task.</p>
            <p class="mt-2">Created with modern CSS techniques and best practices.</p>
        </div>
    </footer>

    <script>
        // Interactive transition demo
        const transitionSlider = document.getElementById('transition-slider');
        const durationValue = document.getElementById('duration-value');
        const transitionDemo = document.getElementById('transition-demo');

        transitionSlider.addEventListener('input', function() {
            const duration = this.value + 's';
            durationValue.textContent = duration;
            transitionDemo.style.transition = `all ${duration} ease`;
        });

        transitionDemo.addEventListener('mouseenter', function() {
            this.style.transform = 'scale(1.2) rotate(5deg)';
            this.style.background = 'var(--accent-color)';
        });

        transitionDemo.addEventListener('mouseleave', function() {
            this.style.transform = 'scale(1) rotate(0deg)';
            this.style.background = 'var(--primary-color)';
        });

        // Add some interactive elements
        document.querySelectorAll('.feature-card').forEach(card => {
            card.addEventListener('click', function() {
                this.classList.toggle('bg-gray-100');
            });
        });
    </script>
</body>
</html>
